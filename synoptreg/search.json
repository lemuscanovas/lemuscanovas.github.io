[{"path":"/articles/circulation-to-environment.html","id":"introduction-to-the-s-mode-classification-method","dir":"Articles","previous_headings":"","what":"Introduction to the S-mode classification method","title":"Circulation-To-Environment","text":"S-mode classification grid points (lon-lat) variables observations (rows), days. Thus, application PCA type matrix establishes linear relationships time series grid points. sense, scores obtained type classification show degree representativeness day principal components (PCs). However, scores allow us directly obtain circulation types (also known “weather types”), since day can represented different PCs. example, 2018/01/23 may certain degree representation PC1, PC3 PC6. reason, need use scores (degree representation) coordinates multivariate space execute clustering method ends creating groups days similar . addition, VARIMAX rotation applied retained PCs order redistribute explained variance. variance PCs rotated probably follow consecutive order. example, PC1 one accumulates highest explained variance. Note rotation applied pca_decision() function. synoptReg package clustering method implemented one proposed Esteban et al. (2005), based extreme scores. Esteban et al. suggest extreme scores (positive negative) PC (>2 <-2) can used multivariate coordinates cluster center apply k-means algorithm. sense, using positive negative scores, groups component split (group extreme scores reached). , retain 4 PCs, final classification can reach 8 weather types/circulation types.","code":""},{"path":"/articles/circulation-to-environment.html","id":"synoptic-classification-procedure","dir":"Articles","previous_headings":"","what":"Synoptic classification procedure","title":"Circulation-To-Environment","text":"example use data previously downloaded download_ncep() function. Specifically, use mslp z500 objects loaded package, referring mean sea level pressure 500 hPa geopotential height variables, respectively. time period atmospheric variables 2000-01-01 2002-12-31. total 3 years. first step executing synoptic classification pass function tidy_nc(), since allow us join two atmospheric variables execute classification later. also possible subset time period geographical extension. addition, whether specify argument , function computes anomaly atmospheric variable. anomaly computed respect monthly average. subset time period using time_subet argument, anomaly computed last period. case, now group atmospheric variables. mandatory use list grouping variables. two variables joined tibble, can proceed explore data set decide number components retain. decision use pca_decision() function. important specify number generous components since want know number components explain variance data. Also, since ’re working 2 variables different units measurement, ’s important normalize/standardize variables.  taking look scree test, seems reasonable retain 5 PCs, allow 10 WT. 5 PCs explain arround 90% explained variance. Now, can already compute synoptic classification: object returned synoptclas list contains tibble date corresponding WT, another tibble grid average value atmospheric variables CT. last result can create visualization synoptic patterns:","code":"library(synoptReg) #> The legacy packages maptools, rgdal, and rgeos, underpinning the sp package, #> which was just loaded, were retired in October 2023. #> Please refer to R-spatial evolution reports for details, especially #> https://r-spatial.org/r/2023/05/15/evolution4.html. #> It may be desirable to make the sf package available; #> package maintainers should consider adding sf to Suggests:. #>  #> **** #> Welcome to synoptReg!  #> Using synoptReg for research publication?  Please cite it! #> Lemus-Canovas, M. et al. synoptReg: An R package for computing a synoptic climate classification and a spatial regionalization of environmental data.  #> Environmental Modelling & Software 118, 114-119 (2019). DOI: https://doi.org/10.1016/j.envsoft.2019.04.006. #> **** library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.3     ✔ readr     2.1.4 #> ✔ forcats   1.0.0     ✔ stringr   1.5.0 #> ✔ ggplot2   3.4.4     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.3     ✔ tidyr     1.3.0 #> ✔ purrr     1.0.2 #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors library(rnaturalearth) #> Support for Spatial objects (`sp`) will be deprecated in {rnaturalearth} and will be removed in a future release of the package. Please use `sf` objects with {rnaturalearth}. For example: `ne_download(returnclass = 'sf')` library(metR) #>  #> Attaching package: 'metR' #>  #> The following object is masked from 'package:purrr': #>  #>     cross  slp_file <- system.file(\"extdata\", \"mslp_ei.nc\", package = \"synoptReg\") z500_file <- system.file(\"extdata\", \"z500_ei.nc\", package = \"synoptReg\")  msl_ei <- read_nc(slp_file) z500_ei <- read_nc(z500_file,anomaly = T)  # The output is just an SpatRaster object print(z500_ei) #> class       : SpatRaster  #> dimensions  : 11, 13, 4018  (nrow, ncol, nlyr) #> resolution  : 2.5, 2.5  (x, y) #> extent      : -16.25, 16.25, 28.75, 56.25  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84  #> source(s)   : memory #> varname     : z (Geopotential)  #> names       :        z_1,        z_2,        z_3,        z_4,        z_5,        z_6, ...  #> min values  : -2108.3423, -2137.6039, -2481.7125, -3137.6695, -3835.5451, -2447.2036, ...  #> max values  :   830.8972,   940.7783,   792.2698,   388.1245,   122.3911,   166.3179, ...  #> unit        : m**2 s**-2, m**2 s**-2, m**2 s**-2, m**2 s**-2, m**2 s**-2, m**2 s**-2, ...  #> time (days) : 2000-01-01 to 2010-12-31 msl_ei_sr <- as_synoptReg(msl_ei) z500_ei_sr <- as_synoptReg(z500_ei)  vars <- bind_rows(msl_ei_sr, z500_ei_sr) info <- pca_decision(vars,ncomp = 30,norm = T,matrix_mode = \"S-mode\") info$screeplot #scree test info$summary[,1:10] # first 10 PCs #>                        1         2         3         4          5          6 #> sdev          10.4087822 7.8720684 6.6881486 5.1484813 3.25659957 2.69474712 #> prop.variance  0.3789151 0.2167304 0.1564422 0.0927044 0.03709119 0.02539675 #> cum.variance   0.3789151 0.5956455 0.7520877 0.8447921 0.88188326 0.90728001 #>                        7          8           9          10 #> sdev          2.34252337 1.78480256 1.534254531 1.411645834 #> prop.variance 0.01919154 0.01114096 0.008232598 0.006969371 #> cum.variance  0.92647155 0.93761251 0.945845106 0.952814477 cl <- synoptclas(vars,ncomp = 5,norm = T,matrix_mode = \"S-mode\") cl #> $clas #> # A tibble: 4,018 × 2 #>    time          WT #>    <date>     <int> #>  1 2000-01-01     7 #>  2 2000-01-02     7 #>  3 2000-01-03     7 #>  4 2000-01-04     7 #>  5 2000-01-05     7 #>  6 2000-01-06     7 #>  7 2000-01-07     7 #>  8 2000-01-08     7 #>  9 2000-01-09     7 #> 10 2000-01-10     9 #> # ℹ 4,008 more rows #>  #> $grid_clas #> # A tibble: 2,574 × 8 #>        x     y time       var   units    WT mean_WT_value cv_WT_value #>    <dbl> <dbl> <date>     <chr> <chr> <int>         <dbl>       <dbl> #>  1 -15      55 2000-01-01 msl   Pa        7       100838.       1.46  #>  2 -15      55 2000-01-10 msl   Pa        9       101370.       1.07  #>  3 -15      55 2000-01-14 msl   Pa        3       101661.       1.15  #>  4 -15      55 2000-01-18 msl   Pa        1       102375.       1.02  #>  5 -15      55 2000-01-22 msl   Pa        8       101220.       1.19  #>  6 -15      55 2000-02-10 msl   Pa        2       100197.       1.30  #>  7 -15      55 2000-03-17 msl   Pa        4       102064.       0.708 #>  8 -15      55 2000-03-23 msl   Pa        5        99395.       1.18  #>  9 -15      55 2000-05-17 msl   Pa        6       100985.       0.784 #> 10 -12.5    55 2000-01-01 msl   Pa        7       100954.       1.42  #> # ℹ 2,564 more rows borders <- ne_countries(continent = c(\"europe\",\"africa\"),                                        returnclass = \"sf\")  ggplot()+     geom_contour_fill(filter(cl$grid_clas, var == \"z\"),                mapping = aes(x,y,z = mean_WT_value/9.8),               binwidth = 20)+     geom_sf(data = borders, fill = \"transparent\")+     geom_contour2(data = filter(cl$grid_clas,var == \"msl\"),                   aes(x=x,y=y,z=mean_WT_value/100),                   binwidth = 4, color = \"black\") +     geom_text_contour(data= filter(cl$grid_clas, var == \"msl\"),                       aes(x=x,y=y,z=mean_WT_value/100),                        stroke = 0.15,binwidth = 4) +     guides(fill = guide_colourbar(barwidth = 9, barheight = 0.5))+     facet_wrap(~WT, ncol = 5) +     scale_fill_divergent(name = \"Z anomaly (m)\") +     scale_x_continuous(limits = c(-15,15), expand = c(0, 0))+     scale_y_continuous(limits = c(30,55), expand = c(0,0))+     theme_bw() +     theme(       panel.grid.major = element_blank(),        panel.grid.minor = element_blank(),       panel.background = element_blank(),       text = element_text(size = 10),       strip.background = element_rect(fill = \"transparent\", color = NA),       axis.title = element_blank(),       axis.text = element_blank(),       axis.ticks = element_blank(),       legend.position = \"bottom\")"},{"path":"/articles/circulation-to-environment.html","id":"from-circulation-types-to-environment","dir":"Articles","previous_headings":"","what":"From circulation types to environment","title":"Circulation-To-Environment","text":"synoptReg function called ct2env() allows estalblish link synoptic classification created previously link environmental variable. case, example uses daily precipitation data Balearic Islands (Spain) resolution 5x5 km. can observe, structure tibble always (variables: lon, lat, time, value) respected functions package work correctly. calculate interaction WTs precipitation? result tibble containing variables lon, lat, WT calc. last column result average precipitation grid point WT. visualize result:","code":"pcp_file <- system.file(\"extdata\", \"pcp_spread.nc\", package = \"synoptReg\") pcp <- read_nc(pcp_file) ct2pcp <- ct2env(pcp,clas = cl$clas,fun = mean,out = \"data.frame\") ct2pcp #> # A tibble: 1,899 × 5 #>          x       y WT       tp units #>      <dbl>   <dbl> <chr> <dbl> <chr> #>  1 1105672 4458822 1     0.553 mm    #>  2 1105672 4458822 2     2.95  mm    #>  3 1105672 4458822 3     1.91  mm    #>  4 1105672 4458822 4     4.30  mm    #>  5 1105672 4458822 5     1.21  mm    #>  6 1105672 4458822 6     2.83  mm    #>  7 1105672 4458822 7     1.42  mm    #>  8 1105672 4458822 8     1.02  mm    #>  9 1105672 4458822 9     0.777 mm    #> 10 1085672 4453822 1     0.526 mm    #> # ℹ 1,889 more rows ggplot() +    geom_point(data=ct2pcp, aes(x=x, y=y,color=tp), size =0.2) + # original was mm*10   scale_color_gradientn(colours = rev(pals::linearl(100)),    name = \"rainfall (mm)\",na.value=\"transparent\") +    coord_equal()+    facet_wrap(~WT, ncol = 4) +   guides(fill = guide_colourbar(barwidth = 9, barheight = 0.5))+     theme_bw() +     theme(       panel.grid.major = element_blank(),        panel.grid.minor = element_blank(),       panel.background = element_blank(),       text = element_text(size = 10),       strip.background = element_rect(fill = \"transparent\", color = NA),       axis.title = element_blank(),       axis.text = element_blank(),       axis.ticks = element_blank(),       legend.position = \"bottom\")"},{"path":"/articles/circulation-to-environment.html","id":"creating-categorized-regions--the-last-step-","dir":"Articles","previous_headings":"","what":"Creating categorized regions. The last step.","title":"Circulation-To-Environment","text":"Finally, may interesting classify environmental variables different regions. one regions different characteristics based relation precipitation linked WT. carry categorization process, necessary object ct2pcp SpatRaster format: Now matter extracting main spatial patterns precipitation linked WTs. purpose, use raster_pca() function.","code":"ct2pcp_r <- ct2env(pcp,clas = cl$clas,fun = mean,out = \"SpatRaster\") ct2pcp_r #> class       : SpatRaster  #> dimensions  : 35, 53, 9  (nrow, ncol, nlyr) #> resolution  : 5000, 5000  (x, y) #> extent      : 863172, 1128172, 4286322, 4461322  (xmin, xmax, ymin, ymax) #> coord. ref. : +proj=utm +zone=30 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs  #> source(s)   : memory #> varname     : tp  #> names       :         1,         2,        3,         4,         5,         6, ...  #> min values  : 0.1901515,  1.890289, 1.554848,  2.869419, 0.5490909, 0.5472843, ...  #> max values  : 1.3775252, 10.960744, 4.836970, 13.604893, 2.6737374, 5.7076678, ...  #> unit        :        mm,        mm,       mm,        mm,        mm,        mm, ... # Regionalization ct2pcp_reg <- regionalization(ct2pcp_r,centers = 4)   precp_region_df <- raster::as.data.frame(ct2pcp_reg$cluster_rast,                                   xy = T) # Visualization:  labels <- c(\"Region 1\",\"Region 2\",            \"Region 3\", \"Region 4\") colours <- c(\"mediumseagreen\",\"darkgoldenrod1\",               \"khaki1\", \"dodgerblue3\")  ggplot() +    geom_tile(data=precp_region_df, aes(x=x, y=y,fill=lyr1)) +   scale_fill_gradientn(colours = colours,                        guide = \"legend\", breaks = c(1,2,3,4),                        na.value = alpha(\"white\", alpha = 0.0),                        labels = labels, name= \"\")+   theme_bw() +   coord_equal()+   theme(axis.text = element_blank(),axis.title = element_blank(),         legend.position = \"bottom\", axis.ticks = element_blank())"},{"path":"/articles/classification_metrics.html","id":"computing-a-simple-synoptic-classification","dir":"Articles","previous_headings":"","what":"Computing a simple synoptic classification","title":"Extracting metrics from the synoptic classification","text":"provide simple example computing simple synoptic classification using mslp variable. case, use “S-mode” matrix.","code":"library(synoptReg) library(lubridate) library(dplyr) library(tidyr) library(rnaturalearth) library(metR) library(ggplot2) library(ggpubr)  slp_file <- system.file(\"extdata\", \"mslp_ei.nc\", package = \"synoptReg\")  slp <- read_nc(slp_file) %>% as_synoptReg()  cl <- synoptclas(slp,ncomp = 4,norm = T,matrix_mode = \"S-mode\")  borders <- ne_countries(continent = c(\"europe\",\"africa\"),                                        returnclass = \"sf\")  ggplot()+     geom_raster(filter(cl$grid_clas, var == \"msl\"),                mapping = aes(x,y,fill = mean_WT_value/100),               interpolate = T,hjust = 0,vjust = 0)+     geom_sf(data = borders, fill = \"transparent\")+     geom_contour2(data = filter(cl$grid_clas,var == \"msl\"),                   aes(x,y,z=mean_WT_value/100),                   binwidth = 4, color = \"black\") +     geom_text_contour(data= filter(cl$grid_clas, var == \"msl\"),                       aes(x,y,z=mean_WT_value/100),                        stroke = 0.15,binwidth = 4) +     guides(fill = guide_colourbar(barwidth = 9, barheight = 0.5))+     facet_wrap(~WT, ncol = 4) +     scale_fill_gradientn(colours = pals::jet(100),name = \"slp (hPa\") +     scale_x_continuous(limits = c(-15,15), expand = c(0, 0))+     scale_y_continuous(limits = c(30,55), expand = c(0,0))+     theme_bw() +     theme(       panel.grid.major = element_blank(),        panel.grid.minor = element_blank(),       panel.background = element_blank(),       text = element_text(size = 10),       strip.background = element_rect(fill = \"transparent\", color = NA),       axis.title = element_blank(),       axis.text = element_blank(),       axis.ticks = element_blank(),       legend.position = \"bottom\")"},{"path":"/articles/classification_metrics.html","id":"extracting-monthly-relative-frequences","dir":"Articles","previous_headings":"","what":"Extracting monthly relative frequences","title":"Extracting metrics from the synoptic classification","text":"extract monthly relatives frequencies per WT?","code":"clas <- cl$clas  # monthly frequence histogram  mo_hist <- clas %>%     mutate(mo = month(time)) %>%    group_by(WT,mo) %>%   mutate(n = length(time)) %>%   ungroup() %>%   group_by(WT) %>%   mutate(n_prop = n/length(time)) %>%   ungroup() %>%   distinct(WT,mo,.keep_all = T) %>%   complete(mo, WT = 1:8,             fill = list(n_prop = 0)) ggplot(data = mo_hist, aes(x = mo, y = WT,fill = n_prop))+   geom_tile(color = \"black\") +   scale_fill_gradientn(colors = pals::brewer.blues(100),                         name = \"Daily Relative \\nFrequency\",                        breaks = seq(0,1, by = 0.1)) +   geom_text(aes(label=round(n_prop,2)), size = 4)+   scale_x_continuous(name=\"Month\",                       breaks = seq(1,12,1),                       expand=c(0,0)) +   scale_y_continuous(breaks = seq(1,8,1),expand = c(0,0))+   theme_classic()+   labs(title = \"Monthly relative frequence by WT\")+   theme(plot.title = element_text(color=\"black\",                                    size=10,                                    face=\"bold\"),         axis.text=element_text(size=8),         axis.title.x = element_text(size = 8),         axis.title.y = element_text(size = 8),         legend.title=element_text(size=8),         legend.text=element_text(size= 8),         legend.position=\"bottom\")"},{"path":"/articles/classification_metrics.html","id":"extracting-annual-frequency-trends","dir":"Articles","previous_headings":"","what":"Extracting annual frequency trends","title":"Extracting metrics from the synoptic classification","text":"extract trend annual frequences per WT?","code":"WT_time_series <- clas %>%     mutate(yr = year(time)) %>%    group_by(yr,WT) %>%   mutate(n = length(time)) %>%   ungroup() %>%   distinct(WT,yr,.keep_all = T) %>%   select(-time) %>%   complete(yr, WT = 1:4,             fill = list(n = NA)) ggplot(data = WT_time_series, aes(x = yr, y = n))+   geom_point()+   geom_line(size = 0.8) +   scale_x_continuous(labels = seq(2000,2010,1),                       breaks = seq(2000,2010,1),                      minor_breaks = seq(2000,2010,1))  +   stat_smooth(method = \"lm\",                formula = y ~ x,                linewidth = 1,                color = \"red4\",                linetype = \"dashed\") +   stat_cor()+   stat_regline_equation(label.x = 2006)+   facet_wrap(~ WT, ncol = 2,scales = \"free_y\") +   theme_bw() +   theme(axis.text.x = element_text(colour=\"grey20\",                                     size=8,                                     angle=90,                                     hjust=.5,                                     vjust=.5),         axis.text.y = element_text(colour=\"grey20\",                                     size=8),         text = element_text(size=10),panel.grid = element_blank()) +   ylab(\"Daily Frequency\") #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"/articles/environment-to-circulation.html","id":"introduction-to-the-t-mode-classification-method","dir":"Articles","previous_headings":"","what":"Introduction to the T-mode classification method","title":"Environment-To-Circulation","text":"structure matrix T-mode establishes variables days, observations grid points. case, PCA establishes linear relationships daily map atmospheric variable order extract main WT. PCA associates directly days similar group WTs, necessary use clustering method. synoptReg allows perform three variants T-mode based : Positive negative (PN) correlations (loadings) days PC. Day 1 may associated PC X+ PC X-, depending whether correlation positive negative. last option, allows obtain double classes selected components. 4 PCs selected, final result can reach maximum 8 CTs. Maximum positive correlations (MAX) day PC. Day 1 associated PC higher positive correlation; Absolute correlations (ABS) day PC. Day 1 associated PC higher absolute correlation. See follwing example: Note, VARIMAX rotation applied retained PCs. See Circulation--Environment approach vignette information PC rotation. recommended review references proposed section Method references.","code":""},{"path":"/articles/environment-to-circulation.html","id":"extracting-the-torrential-rainfall-events-100-mm24h","dir":"Articles","previous_headings":"","what":"Extracting the torrential rainfall events (>= 100 mm/24h)","title":"Environment-To-Circulation","text":"example extract every day least one point grid precipitation >= 100 mm Balearic Islands. can easily done dplyr() library tidyverese (Wickham et al., 2019). result vector 83 dates reflect days precipitation >= 100 mm point Balearic Islands.","code":"library(synoptReg) library(dplyr) pcp_file <- system.file(\"extdata\", \"pcp_spread.nc\", package = \"synoptReg\") pcp <- read_nc(pcp_file) %>% as_synoptReg()  torrential_dates <- pcp %>%    filter(value >= 100) %>%   distinct(time) %>%   pull()"},{"path":[]},{"path":"/articles/environment-to-circulation.html","id":"reading-netcdf-data","dir":"Articles","previous_headings":"Synoptic classification procedure","what":"Reading NetCDF data","title":"Environment-To-Circulation","text":"order compute synoptic classification 83 events need read previously amospheric data ERA-Interim dataset (Dee et al., 2011), stored NetCDF files. read type files, synoptReg specific function. previous versions , now intuitive simple alternatives reading . case, use ReadNetCDF() function included metR. variables read : mean sea level pressure (mslp), geopotential height 500 hPa (z500) temperature 850 hPa (t850). Thus, classification made 3 atmospheric variables provide information different layers troposphere (surface height). Note reading ReadNetCDF() return exactly desired data.frame format. reason, simple manipulation dplyr() required:","code":"library(metR) # listing NetCDF files stored in synoptReg: msl_file <- system.file(\"extdata\", \"mslp_ei.nc\", package = \"synoptReg\") z500_file <- system.file(\"extdata\", \"z500_ei.nc\", package = \"synoptReg\") t850_file <- system.file(\"extdata\", \"t850_ei.nc\", package = \"synoptReg\")   msl <- read_nc(msl_file) %>% as_synoptReg() z500 <- read_nc(z500_file,anomaly = T) %>% as_synoptReg() t850 <- read_nc(t850_file,anomaly = T) %>% as_synoptReg()  vars_torrential <- bind_rows(msl,z500, t850) %>%   filter(time %in% torrential_dates)"},{"path":"/articles/environment-to-circulation.html","id":"filtering-and-grouping-the-atmospheric-variables-using-the-torrential-events","dir":"Articles","previous_headings":"Synoptic classification procedure","what":"Filtering and grouping the atmospheric variables using the torrential events","title":"Environment-To-Circulation","text":"Now, can proceed : 1) grouping three atmospheric variables one unique tibble; 2) Subset atmospheric variables using torrential rainfall dates. process can computed means tidy_nc(). list required group atmospheric variables. already variables grouped filtered. addition, tidy_nc() computes anomaly atmospheric variables using monthly average whole study period filtering dates.","code":""},{"path":"/articles/environment-to-circulation.html","id":"selecting-the-number-of-pcs-and-synoptic-classification-performance","dir":"Articles","previous_headings":"Synoptic classification procedure","what":"Selecting the number of PCs and Synoptic classification performance","title":"Environment-To-Circulation","text":"case circulation--environment approach, important take decision number components retain order carry synoptic classification. help decision making process, pca_decision() returns scree test, among stats:  means Scree plot, seems reasonable retain 6 PCs. 6 PCs explain 80% variance. information, can already perform synoptic classification, specifying matrix mode \"T-mode\": object returned synoptclas differs relatively object returned apply classification \"S-mode\". time, output list 4 objects: 2 objects tibbles variables time WT. difference two objects lies grouping method applied achieve WTs. clas_abs association done absolute correlations;clas_max association done positive correlations; finally, clas_pn extreme positive negative values used get final groups. three remaining objects grids classified methods. case, work PN approach. Let’s see results:","code":"info <- pca_decision(vars_torrential,ncomp = 30,norm = T,matrix_mode = \"T-mode\") info$screeplot info$summary #>                       1         2         3          4          5          6 #> sdev          5.1185115 3.6034342 3.1823508 2.57912608 2.37691417 2.27236344 #> prop.variance 0.3156525 0.1564426 0.1220163 0.08014327 0.06806893 0.06221248 #> cum.variance  0.3156525 0.4720952 0.5941115 0.67425478 0.74232370 0.80453618 #>                        7          8          9         10         11         12 #> sdev          1.55600120 1.46252779 1.25624418 1.14552095 1.03678028 0.96519519 #> prop.variance 0.02917036 0.02577093 0.01901385 0.01580986 0.01295076 0.01122412 #> cum.variance  0.83370654 0.85947747 0.87849132 0.89430118 0.90725194 0.91847606 #>                        13          14          15          16          17 #> sdev          0.868246644 0.792538727 0.762162574 0.727480937 0.697695736 #> prop.variance 0.009082557 0.007567682 0.006998696 0.006376247 0.005864811 #> cum.variance  0.927558617 0.935126299 0.942124996 0.948501243 0.954366054 #>                        18          19          20          21          22 #> sdev          0.565083481 0.557921056 0.517389968 0.502554709 0.465367037 #> prop.variance 0.003847221 0.003750312 0.003225209 0.003042906 0.002609235 #> cum.variance  0.958213275 0.961963587 0.965188796 0.968231703 0.970840938 #>                        23          24          25         26          27 #> sdev          0.405150685 0.397725264 0.389126510 0.37425815 0.367115122 #> prop.variance 0.001977676 0.001905848 0.001824331 0.00168758 0.001623777 #> cum.variance  0.972818613 0.974724461 0.976548792 0.97823637 0.979860149 #>                        28          29         30 #> sdev          0.339549481 0.334820645 0.33009835 #> prop.variance 0.001389083 0.001350661 0.00131283 #> cum.variance  0.981249232 0.982599893 0.98391272 cl <- synoptclas(vars_torrential,ncomp = 6,norm = T,matrix_mode = \"T-mode\") #> Warning: The `x` argument of `as_tibble.matrix()` must have unique column names if #> `.name_repair` is omitted as of tibble 2.0.0. #> ℹ Using compatibility `.name_repair`. #> ℹ The deprecated feature was likely used in the synoptReg package. #>   Please report the issue at #>   <https://github.com/lemuscanovas/synoptReg/issues>. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. cl # list object containing the classification and the classified grid #> $clas_abs #> # A tibble: 83 × 2 #>    time          WT #>    <date>     <dbl> #>  1 2000-09-04     5 #>  2 2000-10-11     2 #>  3 2000-10-22     3 #>  4 2001-02-18     1 #>  5 2001-07-16     2 #>  6 2001-09-06     5 #>  7 2001-11-10     2 #>  8 2001-11-11     2 #>  9 2001-11-14     2 #> 10 2001-11-15     2 #> # ℹ 73 more rows #>  #> $clas_max #> # A tibble: 83 × 2 #>    time          WT #>    <date>     <dbl> #>  1 2000-09-04     5 #>  2 2000-10-11     1 #>  3 2000-10-22     4 #>  4 2001-02-18     2 #>  5 2001-07-16     5 #>  6 2001-09-06     5 #>  7 2001-11-10     2 #>  8 2001-11-11     2 #>  9 2001-11-14     2 #> 10 2001-11-15     2 #> # ℹ 73 more rows #>  #> $clas_pn #> # A tibble: 83 × 2 #>    time       WT    #>    <date>     <chr> #>  1 2000-09-04 5+    #>  2 2000-10-11 2-    #>  3 2000-10-22 3-    #>  4 2001-02-18 1-    #>  5 2001-07-16 2-    #>  6 2001-09-06 5+    #>  7 2001-11-10 2+    #>  8 2001-11-11 2+    #>  9 2001-11-14 2+    #> 10 2001-11-15 2+    #> # ℹ 73 more rows #>  #> $grid_clas_abs #> # A tibble: 2,574 × 8 #>        x     y time       var   units    WT mean_WT_value cv_WT_value #>    <dbl> <dbl> <date>     <chr> <chr> <dbl>         <dbl>       <dbl> #>  1 -15      55 2000-09-04 msl   Pa        5       101889.       1.12  #>  2 -15      55 2000-10-11 msl   Pa        2       101237.       1.53  #>  3 -15      55 2000-10-22 msl   Pa        3       101159.       1.28  #>  4 -15      55 2001-02-18 msl   Pa        1       101316.       1.40  #>  5 -15      55 2002-03-29 msl   Pa        6       102166.       0.774 #>  6 -15      55 2002-09-12 msl   Pa        4       102093.       0.725 #>  7 -12.5    55 2000-09-04 msl   Pa        5       102011.       1.01  #>  8 -12.5    55 2000-10-11 msl   Pa        2       101303.       1.61  #>  9 -12.5    55 2000-10-22 msl   Pa        3       101152.       1.33  #> 10 -12.5    55 2001-02-18 msl   Pa        1       101545.       1.35  #> # ℹ 2,564 more rows #>  #> $grid_clas_max #> # A tibble: 2,574 × 8 #>        x     y time       var   units    WT mean_WT_value cv_WT_value #>    <dbl> <dbl> <date>     <chr> <chr> <dbl>         <dbl>       <dbl> #>  1 -15      55 2000-09-04 msl   Pa        5       102091.       0.893 #>  2 -15      55 2000-10-11 msl   Pa        1       100961.       1.25  #>  3 -15      55 2000-10-22 msl   Pa        4       101853.       0.818 #>  4 -15      55 2001-02-18 msl   Pa        2       102242.       1.07  #>  5 -15      55 2002-04-03 msl   Pa        3       100828.       1.71  #>  6 -15      55 2004-11-04 msl   Pa        6       100588.       1.32  #>  7 -12.5    55 2000-09-04 msl   Pa        5       102140.       0.792 #>  8 -12.5    55 2000-10-11 msl   Pa        1       100942.       1.25  #>  9 -12.5    55 2000-10-22 msl   Pa        4       101965.       0.757 #> 10 -12.5    55 2001-02-18 msl   Pa        2       102432.       1.04  #> # ℹ 2,564 more rows #>  #> $grid_clas_pn #> # A tibble: 5,148 × 8 #>        x     y time       var   units WT    mean_WT_value cv_WT_value #>    <dbl> <dbl> <date>     <chr> <chr> <chr>         <dbl>       <dbl> #>  1   -15    55 2000-09-04 msl   Pa    5+          102523.       0.601 #>  2   -15    55 2000-10-11 msl   Pa    2-          100288.       1.35  #>  3   -15    55 2000-10-22 msl   Pa    3-          100442.       0.708 #>  4   -15    55 2001-02-18 msl   Pa    1-          101483.       1.72  #>  5   -15    55 2001-11-10 msl   Pa    2+          102398.       0.800 #>  6   -15    55 2002-03-29 msl   Pa    6-          102504.       0.515 #>  7   -15    55 2002-04-03 msl   Pa    5-          101165.       1.18  #>  8   -15    55 2002-05-03 msl   Pa    1+          101148.       1.08  #>  9   -15    55 2002-09-12 msl   Pa    4+          102214.       0.493 #> 10   -15    55 2004-11-04 msl   Pa    6+          101716.       0.947 #> # ℹ 5,138 more rows library(ggplot2)  library(dplyr) library(rnaturalearth) library(metR)  borders <- ne_countries(continent = c(\"europe\",\"africa\"),                                        returnclass = \"sf\",scale = 50)  ggplot()+     geom_contour_fill(filter(cl$grid_clas_pn, var == \"z\"),                mapping = aes(x,y,z = mean_WT_value/9.8), # to m               binwidth = 20)+     geom_sf(data = borders, fill = \"transparent\")+   geom_contour2(data = filter(cl$grid_clas_pn,var == \"msl\"),                 aes(x=x,y=y,z=mean_WT_value/100),                  binwidth = 4, color = \"black\") +   geom_text_contour(data= filter(cl$grid_clas_pn, var == \"msl\"),                     aes(x=x,y=y,z=mean_WT_value/100),                      stroke = 0.15,binwidth = 4) +   geom_contour2(data = filter(cl$grid_clas_pn,var == \"t\"),                  aes(x=x,y=y,z=mean_WT_value-273.15),                  binwidth = 2, color = \"black\", linetype = \"dashed\") +   geom_text_contour(data= filter(cl$grid_clas_pn, var == \"t\"),                     aes(x=x,y=y,z=mean_WT_value),                      stroke = 0.15,binwidth = 2) +     guides(fill = guide_colourbar(barwidth = 9, barheight = 0.5))+     facet_wrap(~WT, ncol = 4) +     scale_fill_divergent(name = \"Z anomaly (m)\") +     scale_x_continuous(limits = c(-15,15), expand = c(0,0))+     scale_y_continuous(limits = c(30,55), expand = c(0,0))+     theme_bw() +     theme(       panel.grid.major = element_blank(),        panel.grid.minor = element_blank(),       panel.background = element_blank(),       text = element_text(size = 10),       strip.background = element_rect(fill = \"transparent\", color = NA),       axis.title = element_blank(),       axis.text = element_blank(),       axis.ticks = element_blank(),       legend.position = \"bottom\")"},{"path":"/articles/environment-to-circulation.html","id":"analysing-the-spatial-contribution-of-each-wt-to-torrential-rainfall-in-the-balearic-islands","dir":"Articles","previous_headings":"","what":"Analysing the spatial contribution of each WT to torrential rainfall in the Balearic Islands","title":"Environment-To-Circulation","text":"can calculate maximum precipitation associated CT/WT. use function ct2env() indicating argument fun function max:  addition, can assess spatial variability torrential events creating function coefficient variation (cv) fun argument:","code":"pcp_file <- system.file(\"extdata\", \"pcp_spread.nc\", package = \"synoptReg\") pcp <- read_nc(pcp_file) max_torrential_pcp <- ct2env(pcp,clas = cl$clas_pn,fun = max,out = \"data.frame\")  ggplot() +    geom_tile(data=max_torrential_pcp, aes(x=x, y=y,fill=tp)) +    scale_fill_gradientn(colours = rev(pals::linearl(100)),    name = \"rainfall (mm/day)\",na.value=\"transparent\") +    coord_equal()+   scale_colour_gradient(guide = 'none') + facet_wrap(~WT, ncol = 5) +   guides(fill = guide_colourbar(barwidth = 9, barheight = 0.5))+   theme_bw() + theme(axis.title = element_blank(),                       axis.text = element_blank(),                      axis.ticks = element_blank(),                      legend.position = \"bottom\") cv_torrential_pcp <- ct2env(pcp,                             clas = cl$clas_pn,                             fun = function(x){sd(x)/mean(x)*100},                             out = \"data.frame\")  ggplot() +    geom_tile(data=cv_torrential_pcp, aes(x=x, y=y,fill=tp)) +    scale_fill_gradientn(colours = pals::jet(100),    name = \"coeff. var (%)\",na.value=\"transparent\") +    coord_equal()+   scale_colour_gradient(guide = 'none') + facet_wrap(~WT, ncol = 5) +   guides(fill = guide_colourbar(barwidth = 9, barheight = 0.5))+   theme_bw() + theme(axis.title = element_blank(),                       axis.text = element_blank(),                      axis.ticks = element_blank(),                      legend.position = \"bottom\")"},{"path":"/articles/environment-to-circulation.html","id":"method-references","dir":"Articles","previous_headings":"","what":"Method references","title":"Environment-To-Circulation","text":"Synoptic classification method: absolute maximum correlation/loadings approach: Lopez-Bustins, J.., Martin-Vide, J., Sanchez-Lorenzo, ., 2008. Iberia winter rainfall trends based upon changes teleconnection circulation patterns. Glob. Planet. Change. https://doi.org/10.1016/j.gloplacha.2007.09.002 maximum positive-negative loadings approach: Martin-Vide, J., Sanchez-Lorenzo, ., Lopez-Bustins, J.., Cordobilla, M.J., Garcia-Manuel, ., Raso, J.M., 2008. Torrential rainfall northeast Iberian Peninsula: synoptic patterns WeMO influence. Adv. Sci. Res. 2, 99–105. https://doi.org/10.5194/asr-2-99-2008","code":""},{"path":"/articles/Lamb.html","id":"a-simple-example","dir":"Articles","previous_headings":"","what":"A simple example","title":"Objective Lamb classification","text":"synoptReg provides three functions easily apply automatic version Lamb classification, also known Jenkinson Collison. first step read mean sea level pressure data get 16 coordinate points compute classification. get_lamb_points allows compute theses points plot_lamb_scheme visualize .  computed 16 points, can use lamb_clas function perform classification. user can define undefined type (U) desired (Jones et al., 1996) (Trigo Dacamara, 2000). thr argument allows select threshold want total shear vorticity total flow, tune frequency “U” type. Plot synoptic maps quite easy using ggplot2:","code":"library(synoptReg) library(tidyverse) data(msl)  msl$value <- msl$value/100 # Important: mslp in hPa. points <- get_lamb_points(10,45) #centroid used for the 16-points grid computation points #>     x  y label #> 1  25 50    P6 #> 2  25 45   P10 #> 3  25 40   P14 #> 4  15 55    P2 #> 5  15 50    P5 #> 6  15 45    P9 #> 7  15 40   P13 #> 8  15 35   P16 #> 9   5 55    P1 #> 10  5 50    P4 #> 11  5 45    P8 #> 12  5 40   P12 #> 13  5 35   P15 #> 14 -5 50    P3 #> 15 -5 45    P7 #> 16 -5 40   P11 plot_lamb_scheme(points) # plot lamb scheme clas <- lamb_clas(points, msl,U = T,thr = c(4.8,4.2)) # default c(6,6) clas #> $clas #> # A tibble: 1,096 × 2 #>    time       WT    #>    <date>     <chr> #>  1 2000-01-01 A     #>  2 2000-01-02 A     #>  3 2000-01-03 A     #>  4 2000-01-04 ANW   #>  5 2000-01-05 A     #>  6 2000-01-06 A     #>  7 2000-01-07 A     #>  8 2000-01-08 A     #>  9 2000-01-09 C     #> 10 2000-01-10 E     #> # ℹ 1,086 more rows #>  #> $grid_clas #> # A tibble: 5,967 × 4 #>        x     y WT    mean_WT_value #>    <dbl> <dbl> <chr>         <dbl> #>  1   -10    30 A             1018. #>  2   -10    30 AE            1016. #>  3   -10    30 AN            1018. #>  4   -10    30 ANE           1017. #>  5   -10    30 ANW           1019. #>  6   -10    30 AS            1012. #>  7   -10    30 ASE           1017. #>  8   -10    30 ASW           1020. #>  9   -10    30 AW            1021. #> 10   -10    30 C             1017. #> # ℹ 5,957 more rows library(rnaturalearth) library(metR)  borders <- ne_countries(continent = c(\"europe\",\"africa\"),                         returnclass = \"sf\",scale = 50)  # Plotting only cyclonic weather types, including the U type  ggplot()+   geom_contour_fill(filter(clas$grid_clas, str_detect(WT, 'C|U')),                mapping = aes(x,y,z = mean_WT_value),bins = 15)+   geom_sf(data = borders, fill = \"transparent\")+   geom_contour2(filter(clas$grid_clas, str_detect(WT, 'C|U')),                  mapping = aes(x,y,z = mean_WT_value),                  binwidth = 4, color = \"black\") +   geom_text_contour(filter(clas$grid_clas, str_detect(WT, 'C|U')),                      mapping = aes(x,y,z = mean_WT_value),                      stroke = 0.15,binwidth = 4, size = 2, check_overlap = T) +   guides(fill = guide_colourbar(barwidth = 9, barheight = 0.5))+   facet_wrap(~WT, ncol = 5) +   scale_fill_gradientn(colors =  pals::coolwarm(100), name = \"hPa\") +   scale_x_continuous(limits = c(min(msl$x),max(msl$x)), expand = c(0,0))+   scale_y_continuous(limits = c(min(msl$y),max(msl$y)), expand = c(0,0))+   theme_bw() + theme(axis.title = element_blank(),                      axis.text = element_blank(),                      axis.ticks = element_blank(),                      legend.position = \"bottom\",                      axis.title.x=  element_blank(),                      axis.title.y=  element_blank(),                      strip.background = element_blank())"},{"path":[]},{"path":"/articles/Lamb.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Objective Lamb classification","text":"Trigo, R.M.; DaCamara, C.C. Circulation weather types influence precipitation regime Portugal. Int. J. Climatol. 2000, 20, 1559–1581, doi:10.1002/1097-0088(20001115)20:13<1559::AID-JOC555>3.0.CO;2-5. Jones, P.D., Hulme, M. Briffa, K.R., 1993: comparison Lamb circulation types objective classification scheme. Int. J. Climatol. 13, 655-663.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marc Lemus-Canovas. Author, maintainer. Dominic Roye. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lemus-Canovas, M., Lopez-Bustins, J.., Martin-Vide, J., Roye., D., 2019. synoptReg: R package computing synoptic climate classification spatial regionalization environmental data. Environmental Modelling & Software, 118: 114-119.","code":"@Article{,   title = {synoptReg: An R package for computing a synoptic climate classification and a spatial regionalization of environmental data},   journal = {Environmental Modelling & Software},   volume = {118},   pages = {114 - 119},   year = {2019},   issn = {1364-8152},   doi = {10.1016/j.envsoft.2019.04.006},   url = {https://www.sciencedirect.com/science/article/abs/pii/S1364815219300064},   author = {Marc Lemus-Canovas and Joan A. Lopez-Bustins and Javier Martin-Vide and Dominic Royé}, }"},{"path":[]},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Synoptic Climate Classification and Spatial Regionalization of Environmental Data","text":"synoptReg open source package computing synoptic climate classifications spatial regionalizations environmental data. Package website: lemuscanovas.github.io/synoptreg/ Contents: package Installation Vignettes Package citation Contact","code":""},{"path":"/index.html","id":"why-this-package","dir":"","previous_headings":"","what":"Why this package","title":"Synoptic Climate Classification and Spatial Regionalization of Environmental Data","text":"interaction troposphere environment well known, can condition human activities occasions. situations can occur anticyclonic block causes increase concentration NO2; low-pressure area causes abundant rainfall urban areas, etc. package intended roadmap territorial management regional scale anticipate management adverse situations population, due pollution, well extreme weather conditions. short, synoptReg allows : Compute objective synoptic classification obtain main atmospheric patterns, -called weather types, given region. Two approaches provided: Circulation--Environment: First establishes main circulation types long time series characterises environmental variable (.e. precipitation,NO2,O3,…) based previous circulation types. Environment--Circulation: First categorises environmental variable (e.g. precipitation, temperature,…) characterises synoptic patterns prevailing specific environmental conditions (e.g. days elevated temperatures, torrential rainfall events). Several methods implemented: PCA-based, Lamb SOM. Represent impact weather type environmental variable (continuous): precipitation, temperature, pollutants, … Define categorical regionalization environmental variable. region independent specific characteristics.","code":""},{"path":[]},{"path":"/index.html","id":"installation","dir":"","previous_headings":"How it works","what":"Installation","title":"Synoptic Climate Classification and Spatial Regionalization of Environmental Data","text":"","code":"# To install the CRAN version (1.2.1): install.packages(\"synoptReg\")  # To install the latest version from Github (1.3.0): # install.packages(\"remotes\") remotes::install_github(\"lemuscanovas/synoptReg\")"},{"path":"/index.html","id":"vignettes","dir":"","previous_headings":"How it works","what":"Vignettes","title":"Synoptic Climate Classification and Spatial Regionalization of Environmental Data","text":"Interested learning use synoptReg? Visit package website read articles: synoptReg website","code":""},{"path":"/index.html","id":"package-citation","dir":"","previous_headings":"","what":"Package citation","title":"Synoptic Climate Classification and Spatial Regionalization of Environmental Data","text":"Using synoptReg research publication? Please cite ! Lemus-Canovas, M., Lopez-Bustins, J.., Martin-Vide, J., Royé, D., 2019. synoptReg: R package computing synoptic climate classification spatial regionalization environmental data. Environmental Modelling & Software, Vol. 118,114-119pp, ISSN 1364-8152, https://doi.org/10.1016/j.envsoft.2019.04.006","code":""},{"path":"/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Synoptic Climate Classification and Spatial Regionalization of Environmental Data","text":"Feel free contact : lemuscanovas@gmail.com","code":""},{"path":"/reference/as_synoptReg.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a SpatRaster object to a data.frame structure required by synoptReg — as_synoptReg","title":"Convert a SpatRaster object to a data.frame structure required by synoptReg — as_synoptReg","text":"Convert SpatRaster terra package data.frame formatted way required synoptReg .","code":""},{"path":"/reference/as_synoptReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a SpatRaster object to a data.frame structure required by synoptReg — as_synoptReg","text":"","code":"as_synoptReg(x)"},{"path":"/reference/as_synoptReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a SpatRaster object to a data.frame structure required by synoptReg — as_synoptReg","text":"x SpatRaster time series containing atmospheric data (e.g. mean sea level pressure).","code":""},{"path":"/reference/as_synoptReg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a SpatRaster object to a data.frame structure required by synoptReg — as_synoptReg","text":"data.frame following variables: x, y, time, value, var, units","code":""},{"path":[]},{"path":"/reference/as_synoptReg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a SpatRaster object to a data.frame structure required by synoptReg — as_synoptReg","text":"","code":"# Load data slp_file <- system.file(\"extdata\", \"mslp_ei.nc\", package = \"synoptReg\")  # Reading data slp <- read_nc(slp_file)  # Converting it to the required structure by synoptReg slp_df <- as_synoptReg(slp)"},{"path":"/reference/ct2env.html","id":null,"dir":"Reference","previous_headings":"","what":"Establishing the relationship between CT and a environmental variable — ct2env","title":"Establishing the relationship between CT and a environmental variable — ct2env","text":"function applies approach: \"circulation types environment\".","code":""},{"path":"/reference/ct2env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Establishing the relationship between CT and a environmental variable — ct2env","text":"","code":"ct2env(x, clas, fun = mean, out = \"data.frame\")"},{"path":"/reference/ct2env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Establishing the relationship between CT and a environmental variable — ct2env","text":"x data.frame. data.frame containing environmental data (.e. precipitation, temperature, PM10, etc.) following variables: lon, lat, time, value, anom_value. See tidy_nc. clas data.frame. data.frame synoptic classification (time WT) obtained synoptclas function. fun function. function applied environmental variable WT. character. Choose \"data.frame\" (default) \"SpatRaster\" function applied environmental variable WT.","code":""},{"path":"/reference/ct2env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Establishing the relationship between CT and a environmental variable — ct2env","text":"data.frame Raster Stack containing environmental grids based weather types.","code":""},{"path":"/reference/ct2env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Establishing the relationship between CT and a environmental variable — ct2env","text":"","code":"if (FALSE) { # Load atmospheric data data(msl) data(z500)  # Joining both variables atmos_data <- dplyr::bind_rows(msl,z500)  # S-mode classification smode_cl <- synoptclas(atmos_data, ncomp = 6, norm = T)  # Load precipitation data  pcp_file <- system.file(\"inst/extdata\", \"pcp_spread.nc\", package = \"synoptReg\") # ct2env (precipitation example) ct2env(x = pcp, clas = smode_cl$clas, fun = mean, out = \"data.frame\") }"},{"path":"/reference/download_ncep.html","id":null,"dir":"Reference","previous_headings":"","what":"Download NCEP/NCAR data — download_ncep","title":"Download NCEP/NCAR data — download_ncep","text":"Weather Data NCEP/NCAR Reanalysis via RNCEP package","code":""},{"path":"/reference/download_ncep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download NCEP/NCAR data — download_ncep","text":"","code":"download_ncep(   var = \"slp\",   level = \"surface\",   month_range = c(1, 12),   year_range = c(2010, 2017),   lat_range = c(30, 60),   lon_range = c(-30, 10),   dailymean = TRUE,   hour = NULL,   reanalysis2 = TRUE,   save_download = TRUE,   file_name = NULL )"},{"path":"/reference/download_ncep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download NCEP/NCAR data — download_ncep","text":"var slp 'sea level pressure' (default) variables see help ?NCEP.gather level surface (default) month_range min,max month c(1,12) (default) year_range min,max year c(2010,2017) (default) lat_range min,max latitude c(30, 60) (default) lon_range min,max longitud c(-30, 10) (default) dailymean daily avarage variable retrived. Default TRUE. hour One hour following: 0,6,12 18. reanalysis2 Logical. Default TRUE. variables downloaded NCEP-DOE Reanalysis 2. FALSE, data downloaded NCEP/NCAR Reanalysis 1 save_download Logical. Default TRUE. yoy want save downloaded data RDS file? file_name character. Provide name file downloaded.","code":""},{"path":"/reference/download_ncep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download NCEP/NCAR data — download_ncep","text":"data.frame following variables: lon, lat, time, value","code":""},{"path":"/reference/download_ncep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download NCEP/NCAR data — download_ncep","text":"","code":"if (FALSE) { #Daily mean air temperature 2m for 2017 #ta_data <- download_ncep(year_range=2017)  #Air temperature 2m at 06:00 for 2017 #ta_data_h6 <- download_ncep(year_range=2017,dailymean = FALSE,hour=6) }"},{"path":"/reference/get_lamb_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the 16 grid points for the Lamb classification — get_lamb_points","title":"Determine the 16 grid points for the Lamb classification — get_lamb_points","text":"Compute 16 pair coordinates necessary using objective version Lamb method","code":""},{"path":"/reference/get_lamb_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the 16 grid points for the Lamb classification — get_lamb_points","text":"","code":"get_lamb_points(x, y)"},{"path":"/reference/get_lamb_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the 16 grid points for the Lamb classification — get_lamb_points","text":"x longitude coordinate central point scheme. y latitude coordinate central point scheme.","code":""},{"path":"/reference/get_lamb_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the 16 grid points for the Lamb classification — get_lamb_points","text":"data.frame 16 points coordinates.","code":""},{"path":"/reference/get_lamb_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the 16 grid points for the Lamb classification — get_lamb_points","text":"","code":"points <- get_lamb_points(x = -5, y = 40) points #>      x  y label #> 1   10 45    P6 #> 2   10 40   P10 #> 3   10 35   P14 #> 4    0 50    P2 #> 5    0 45    P5 #> 6    0 40    P9 #> 7    0 35   P13 #> 8    0 30   P16 #> 9  -10 50    P1 #> 10 -10 45    P4 #> 11 -10 40    P8 #> 12 -10 35   P12 #> 13 -10 30   P15 #> 14 -20 45    P3 #> 15 -20 40    P7 #> 16 -20 35   P11"},{"path":"/reference/lamb_clas.html","id":null,"dir":"Reference","previous_headings":"","what":"Objective Lamb Weather Type Classification — lamb_clas","title":"Objective Lamb Weather Type Classification — lamb_clas","text":"Calculates classification main weather types              16-points defined get_lamb_points. Wind-flow characteristics              computed daily pressure field according rules proposed original              Jenkinson Collison classification (see Jenkinson Collison, 1977; Jones et al., 2013) (1),               rules proposed Trigo DaCamara, 2000 (2).","code":""},{"path":"/reference/lamb_clas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective Lamb Weather Type Classification — lamb_clas","text":"","code":"lamb_clas(points, msl, U = FALSE, thr = c(6, 6))"},{"path":"/reference/lamb_clas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective Lamb Weather Type Classification — lamb_clas","text":"points 16 point pair coordinates obtained get_lamb_points. msl Mean Sea Level pressure gridded data. U Logical. T, Jones et al. 2013 approach applied, maintaining U-type classification. F, U removed detailed Trigo DaCamara, 2000. thr threshold used Unclassified days (total shear vorticity total flow, respectively). Default c(6,6).","code":""},{"path":"/reference/lamb_clas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objective Lamb Weather Type Classification — lamb_clas","text":"list : data.frame containing dates weather types. data frame containing gridded data grouped circulation types.","code":""},{"path":"/reference/lamb_clas.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Objective Lamb Weather Type Classification — lamb_clas","text":"Jenkinson, .F., Collison F.P (1977) initial climatology gales North Sea Synoptic Climatology Branch Memorandum, . 62.Meteorological Office: Bracknell, England.Jones, P. D., Hulme M., Briffa K. R. (1993) comparison Lamb circulation types objective classification scheme Int. J. Climatol. 13: 655–663.Jones, P. D., Harpham C, Briffa K. R. (2013) Lamb weather types derived Reanalysis products Int. J. Climatol. 33: 1129–1139. Trigo, R., DaCamara C. (2000) Circulation weather types impact precipitation regime Portugal Int. J. Climatol. 20: 1559-1581.","code":""},{"path":[]},{"path":"/reference/lamb_clas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objective Lamb Weather Type Classification — lamb_clas","text":"","code":"data(msl) msl$value <- msl$value/100 points <- get_lamb_points(x = 5,y = 40) lamb_clas(points = points, msl = msl) #> $clas #> # A tibble: 1,096 × 2 #>    time       WT    #>    <date>     <chr> #>  1 2000-01-01 A     #>  2 2000-01-02 ANE   #>  3 2000-01-03 A     #>  4 2000-01-04 A     #>  5 2000-01-05 A     #>  6 2000-01-06 A     #>  7 2000-01-07 A     #>  8 2000-01-08 A     #>  9 2000-01-09 C     #> 10 2000-01-10 NE    #> # ℹ 1,086 more rows #>  #> $grid_clas #> # A tibble: 5,746 × 4 #>        x     y WT    mean_WT_value #>    <dbl> <dbl> <chr>         <dbl> #>  1   -10    30 A             1018. #>  2   -10    30 AE            1015. #>  3   -10    30 AN            1017. #>  4   -10    30 ANE           1015. #>  5   -10    30 ANW           1020. #>  6   -10    30 AS            1017. #>  7   -10    30 ASE           1016. #>  8   -10    30 ASW           1019. #>  9   -10    30 AW            1019. #> 10   -10    30 C             1016. #> # ℹ 5,736 more rows #>"},{"path":"/reference/msl.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Sea Level pressure data — msl","title":"Mean Sea Level pressure data — msl","text":"Data NCEP/NCAR Reanalysis 1 ( https://psl.noaa.gov/data/gridded/data.ncep.reanalysis.html). data corresponds daily values mean sea level pressure 2.5 x 2.5º spatial resolution January 2000 december 2002.","code":""},{"path":"/reference/msl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Sea Level pressure data — msl","text":"","code":"data(msl)"},{"path":"/reference/msl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mean Sea Level pressure data — msl","text":"data.frame following variables: x,y,time,value,var,units. geographical area: -10,30,30,60 time period: 2000-01-01 2002-12-31 units: Pascals","code":""},{"path":"/reference/msl.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mean Sea Level pressure data — msl","text":"Kalnay et al. (1996) NCEP/NCAR 40-year reanalysis project,                    Bull. Amer. Meteor. Soc., 77, 437-470, 1996","code":""},{"path":"/reference/msl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Sea Level pressure data — msl","text":"","code":"data(msl)"},{"path":"/reference/mslp.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Sea Level pressure data — mslp","title":"Mean Sea Level pressure data — mslp","text":"Data NCEP/NCAR Reanalysis 1 ( https://psl.noaa.gov/data/gridded/data.ncep.reanalysis.html). data corresponds daily values mean sea level pressure 2.5 x 2.5º spatial resolution January 2000 december 2002.","code":""},{"path":"/reference/mslp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Sea Level pressure data — mslp","text":"","code":"data(mslp)"},{"path":"/reference/mslp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mean Sea Level pressure data — mslp","text":"data.frame following variables: lon,lat,time,value. geographical area: -10,30,30,60 time period: 2000-01-01 2002-12-31 units: Pascals","code":""},{"path":"/reference/mslp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mean Sea Level pressure data — mslp","text":"Kalnay et al. (1996) NCEP/NCAR 40-year reanalysis project,                    Bull. Amer. Meteor. Soc., 77, 437-470, 1996","code":""},{"path":"/reference/mslp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Sea Level pressure data — mslp","text":"","code":"data(mslp)"},{"path":"/reference/pca_decision.html","id":null,"dir":"Reference","previous_headings":"","what":"PCA decision — pca_decision","title":"PCA decision — pca_decision","text":"pca_decision plots explained variances number principal component. addition, returns information PCA performance.","code":""},{"path":"/reference/pca_decision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PCA decision — pca_decision","text":"","code":"pca_decision(x, ncomp = 30, norm = T, matrix_mode = \"S-mode\")"},{"path":"/reference/pca_decision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PCA decision — pca_decision","text":"x data.frame. data.frame following variables: x, y, time, value, var, units. See as_synoptReg. ncomp integer. Number principal components show/retain norm logical. Default TRUE. norm = TRUE recommended classify two ore variables. matrix_mode character. mode matrix use. Choose S-mode T-mode","code":""},{"path":"/reference/pca_decision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PCA decision — pca_decision","text":"list : list class princomp containing results PCA data frame containing main results ncomp selected (standard deviation, proportion variance cumulative variance). ggplot2 object visualize scree test","code":""},{"path":"/reference/pca_decision.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"PCA decision — pca_decision","text":"perform PCA x must contain rows columns. addition, x contain NA values.","code":""},{"path":[]},{"path":"/reference/pca_decision.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PCA decision — pca_decision","text":"","code":"# Load data (mslp or precp_grid) data(msl) data(z500)  # Joining both variables atmos_data <- dplyr::bind_rows(msl,z500)  # Deciding on the number of PC to retain info <- pca_decision(atmos_data, norm = TRUE)"},{"path":"/reference/pcp.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily precipitation grid of Balearic Islands (Spain) — pcp","title":"Daily precipitation grid of Balearic Islands (Spain) — pcp","text":"Data SPREAD data set downloaded Spanish National Research Council (CSIC). (http://spread.csic.es/info.html). data corresponds daily values precipitation spatial resolution 5 x 5 km January 2000 december 2010","code":""},{"path":"/reference/pcp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily precipitation grid of Balearic Islands (Spain) — pcp","text":"","code":"data(pcp)"},{"path":"/reference/pcp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Daily precipitation grid of Balearic Islands (Spain) — pcp","text":"data.frame following variables: lon,lat,time,value. geographical area: Balearic Islands time period: 2000-01-01 2010-12-31 units: mm*10 coordinates reference system: +proj=utm +zone=30 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs","code":""},{"path":"/reference/pcp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Daily precipitation grid of Balearic Islands (Spain) — pcp","text":"Serrano-Notivoli et al. (2017) SPREAD: high-resolution daily gridded precipitation dataset Spain, extreme events frequency intensity overview.              Earth Syst. Sci. Data, 9, 721-738, 2017, https://doi.org/10.5194/essd-9-721-2017","code":""},{"path":"/reference/pcp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Daily precipitation grid of Balearic Islands (Spain) — pcp","text":"","code":"data(pcp)"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/plot_lamb_scheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Lamb Scheme — plot_lamb_scheme","title":"Plot Lamb Scheme — plot_lamb_scheme","text":"Visualize Lamb Scheme","code":""},{"path":"/reference/plot_lamb_scheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Lamb Scheme — plot_lamb_scheme","text":"","code":"plot_lamb_scheme(points)"},{"path":"/reference/plot_lamb_scheme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Lamb Scheme — plot_lamb_scheme","text":"points points obtained get_lamb_points function.","code":""},{"path":"/reference/plot_lamb_scheme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Lamb Scheme — plot_lamb_scheme","text":"ggplot map.","code":""},{"path":"/reference/plot_lamb_scheme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Lamb Scheme — plot_lamb_scheme","text":"","code":"points <- get_lamb_points(x = -5, y = 40)  plot_lamb_scheme(points)"},{"path":"/reference/raster_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Raster PCA — raster_pca","title":"Raster PCA — raster_pca","text":"Perform Principal Component Analysis SpatRaster","code":""},{"path":"/reference/raster_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raster PCA — raster_pca","text":"","code":"raster_pca(x, aggr = NULL, focal = NULL)"},{"path":"/reference/raster_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raster PCA — raster_pca","text":"x SpatRaster. aggr Integer. Aggregation factor based function aggregate terra package. focal Integer. smooth filter based function focal terra package.","code":""},{"path":"/reference/raster_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raster PCA — raster_pca","text":"list : SpatRaster containing results PCA data.frame containing main results PCA (standard deviation, proportion variance cumulative variance","code":""},{"path":"/reference/read_nc.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and tidy your NetCDF — read_nc","title":"Read and tidy your NetCDF — read_nc","text":"Read tidy initial NetCDF turning absolute values monthly-based anomalies, subsetting time series geogprahical area atmospheric variable.","code":""},{"path":"/reference/read_nc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and tidy your NetCDF — read_nc","text":"","code":"read_nc(   x,   anomaly = F,   time_subset = NULL,   month_subset = NULL,   crop_area = NULL,   aggregate = NULL )"},{"path":"/reference/read_nc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and tidy your NetCDF — read_nc","text":"x path file SpatRaster object. anomaly logical. TRUE convets anomalies, based corresponding monthly means. time_subset character Date. Default NULL. Provide vector dates subset original SpatRaster time series. month_subset integer. Default NULL. Provide vector integers subset original SpatRaster months. crop_area integer. Default NULL. Provide vector coordinates (xmin,xmax,ymin,ymax) crop original SpatRaster domain. aggregate integer. Default NULL. Resampling coarser resolution. Useful save memory processing heavy time-consuming datasets.","code":""},{"path":"/reference/read_nc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and tidy your NetCDF — read_nc","text":"SpatRaster object. must converted daily input hourly.","code":""},{"path":[]},{"path":"/reference/read_nc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and tidy your NetCDF — read_nc","text":"","code":"# Load data (mslp or precp_grid) slp_file <- system.file(\"extdata\", \"mslp_ei.nc\", package = \"synoptReg\")  # Reading data simply slp <- read_nc(slp_file)  # Converting to monthly based anomalies and just for October, November and December slp <- read_nc(slp_file, anomaly = TRUE, month_subset = 10:12)"},{"path":"/reference/regionalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Environmental regionalization — regionalization","title":"Environmental regionalization — regionalization","text":"Perform unspervised clustering SpatRaster","code":""},{"path":"/reference/regionalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Environmental regionalization — regionalization","text":"","code":"regionalization(x, centers, iter.max = 100, nstart = 100, algorithm = \"Lloyd\")"},{"path":"/reference/regionalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Environmental regionalization — regionalization","text":"x SpatRaster centers Integer. Number clusters. iter.max Integer. maximum number iterations allowed. Default 100. nstart Integer. many random sets chosen? Default 100. algorithm Default Lloyd.","code":""},{"path":"/reference/regionalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Environmental regionalization — regionalization","text":"list : list results K-means performance SpatRaster final regionalization list results K-means performance","code":""},{"path":"/reference/som_clas.html","id":null,"dir":"Reference","previous_headings":"","what":"Self-Organizing Maps classification — som_clas","title":"Self-Organizing Maps classification — som_clas","text":"som_clas allows perform SOM synoptic classification","code":""},{"path":"/reference/som_clas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Self-Organizing Maps classification — som_clas","text":"","code":"som_clas(   x,   xdim,   ydim,   iter = 2000,   alpha = c(0.05, 0.01),   dist.fcts = \"euclidean\",   mode = \"online\",   cores = 1,   norm = T )"},{"path":"/reference/som_clas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Self-Organizing Maps classification — som_clas","text":"x data.frame. data.frame following variables: x, y, time, value, var,units. See tidy_nc. xdim Integer. X dimension grid. See somgrid kohonen package. ydim Integer. Y dimension grid. See somgrid kohonen package. iter integer. Number iterations. alpha vector. learning rate. See som kohonen package details. dist.fcts character. vector distance functions used individual data layers. See som kohonen package details. mode carachter. type learning algorithm. Default \"-line\". See kohonen package details. cores Integer. Parallel processing available \"pbatch\" algorithm. norm logical. Default TRUE. norm = TRUE recommended classifying two ore variables.","code":""},{"path":"/reference/som_clas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Self-Organizing Maps classification — som_clas","text":"list : data.frame containing dates weather types. data frame containing gridded data grouped circulation types. object class kohonen components returned function som","code":""},{"path":"/reference/som_clas.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Self-Organizing Maps classification — som_clas","text":"Wehrens, R. BuydenL. (2007) Self- Super-organizing Maps R: kohonen Package Journal Statistical Software, 21(5), 1 - 19.","code":""},{"path":[]},{"path":"/reference/som_clas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Self-Organizing Maps classification — som_clas","text":"","code":"# Load data data(z500)  # SOM classification som_cl <- som_clas(z500, xdim = 4, ydim = 4, iter = 200)"},{"path":"/reference/spatial_lamb.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial objective Lamb Weather Type Classification — spatial_lamb","title":"Spatial objective Lamb Weather Type Classification — spatial_lamb","text":"Calculates  automatic Lamb Jenkinson Collison classification grid point.  approach details described  lamb_clas.","code":""},{"path":"/reference/spatial_lamb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial objective Lamb Weather Type Classification — spatial_lamb","text":"","code":"spatial_lamb(   msl,   xmin = -180,   xmax = 180,   ymin = -80,   ymax = 80,   U = T,   thr = c(6, 6),   cores = 1 )"},{"path":"/reference/spatial_lamb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial objective Lamb Weather Type Classification — spatial_lamb","text":"msl Mean Sea Level pressure gridded data. xmin minimum longitude xmax maximum longitude ymin minimum latitude ymax maximum longitude U Logical. T, Jones et al. 2013 approach applied, maintaining U-type classification. F, U removed detailed Trigo DaCamara, 2000. thr threshold used Unclassified days (total shear vorticity total flow, respectively). Default c(6,6). cores Number cores used","code":""},{"path":"/reference/spatial_lamb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial objective Lamb Weather Type Classification — spatial_lamb","text":"list : data frame containing gridded  classification","code":""},{"path":"/reference/spatial_lamb.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spatial objective Lamb Weather Type Classification — spatial_lamb","text":"Jenkinson, .F., Collison F.P (1977) initial climatology gales North Sea Synoptic Climatology Branch Memorandum, . 62.Meteorological Office: Bracknell, England.Jones, P. D., Hulme M., Briffa K. R. (1993) comparison Lamb circulation types objective classification scheme Int. J. Climatol. 13: 655–663.Jones, P. D., Harpham C, Briffa K. R. (2013) Lamb weather types derived Reanalysis products Int. J. Climatol. 33: 1129–1139. Trigo, R., DaCamara C. (2000) Circulation weather types impact precipitation regime Portugal Int. J. Climatol. 20: 1559-1581.","code":""},{"path":[]},{"path":"/reference/spatial_lamb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial objective Lamb Weather Type Classification — spatial_lamb","text":"","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union data(msl)  msl <- filter(msl, time >= \"2000-01-01\", time <= \"2000-03-30\") clas <- spatial_lamb(msl, xmin = 5,xmax = 15, ymin = 40, ymax = 50, cores = 1)"},{"path":"/reference/synoptclas.html","id":null,"dir":"Reference","previous_headings":"","what":"PCA Synoptic classification — synoptclas","title":"PCA Synoptic classification — synoptclas","text":"synoptclas allows perform several types synoptic classification approaches based one several atmospheric variables (.e. mean sea level pressure, geoptential height 500 hPa, etc.)","code":""},{"path":"/reference/synoptclas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PCA Synoptic classification — synoptclas","text":"","code":"synoptclas(x, ncomp, norm = TRUE, matrix_mode = \"S-mode\", extreme_scores = 2)"},{"path":"/reference/synoptclas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PCA Synoptic classification — synoptclas","text":"x data.frame. data.frame following variables: lon, lat, time, value, var, units. See tidy_nc. ncomp Integer. Number components retained. norm logical. Default TRUE. norm = TRUE recommended classifying two ore variables. matrix_mode character. mode matrix use. Choose S-mode T-mode extreme_scores Integer. Definition extreme score threshold (Esteban et al., 2005). Default 2. applicable matrix_mode = \"S-mode\"","code":""},{"path":"/reference/synoptclas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PCA Synoptic classification — synoptclas","text":"list : data.frame containing dates weather types. \"T-mode\" selected, two classifications returned (absolute positive/negative classification). data frame containing gridded data grouped circulation types.\"T-mode\" selected, 3 classifications returned (absolute correlation,maximum positive correlation, positive/negative classification). addition, p-values t-test computed anomalies, comparing 0 conf.level = 0.95, returned","code":""},{"path":"/reference/synoptclas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PCA Synoptic classification — synoptclas","text":"matrix_mode argument allows conduct different types synoptic classifications depending user's objective. user wants perform synoptic classification long continuous series, must set matrix_mode = \"S-mode\". apply PCA matrix S-mode, variables grid points (x,y) observations days (time series), linear relationships PCA establishes time series grid points. One results obtain PCA \"scores\", indicate degree representativeness day principal components. However, scores allow us directly obtain weather types (WT) classification, since one day can represented several principal components. reason, clustering method required  group day specific WT based multivariate coordinates provided \"scores\". using clustering method, VARIMAX rotation performed principal Components retained, aim redistributing variance components. rotated components, scores used apply extreme scores method (Esteban et al., 2005). scores show degree representativeness associated variation modes principal component, .e., classification day representative centroid. Thus, extreme scores method uses scores > 2 < -2, establishing positive negative phase principal component. extreme scores procedure establishes number groups centroids order apply K-means method without iterations. Conversely, user wants perform synoptic classification specific events (.e. flood events, extreme temperatures events,etc.), must set matrix_mode = \"T-mode\". case, variables days (time series) observations grid points. relationships established case daily gridded map. reason, eigenvalues (correlations) allow allow us associate day WT without using clustering method case S-mode matrix.","code":""},{"path":"/reference/synoptclas.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PCA Synoptic classification — synoptclas","text":"Esteban, P. , Jones, P. D., Martin.Vide, J. Atmospheric circulation patterns related heavy snowfall days Andorra, Pyrenees Int. J. Climatol. 25: 319-329. doi:10.1002/joc.1103","code":""},{"path":[]},{"path":"/reference/synoptclas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PCA Synoptic classification — synoptclas","text":"","code":"# Load data data(msl) data(z500)  # Joining both variables atmos_data <- dplyr::bind_rows(msl,z500)  # S-mode classification smode_cl <- synoptclas(atmos_data, ncomp = 6, norm = TRUE)  # Time subset using a vector of dates of interest dates_int <- c(\"2000-01-25\",\"2000-04-01\",\"2000-07-14\",\"2001-05-08\",\"2002-12-20\") dates_int <- lubridate::as_date(dates_int) atmos_data2 <- dplyr::filter(atmos_data, time %in% dates_int)  # T-mode classification tmode_cl <- synoptclas(atmos_data2, ncomp = 2, matrix_mode = \"T-mode\") #> Warning: The `x` argument of `as_tibble.matrix()` must have unique column names if #> `.name_repair` is omitted as of tibble 2.0.0. #> ℹ Using compatibility `.name_repair`. #> ℹ The deprecated feature was likely used in the synoptReg package. #>   Please report the issue at #>   <https://github.com/lemuscanovas/synoptReg/issues>."},{"path":"/reference/tidy_nc.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the time period and the geogprahical extension, as well as computes the anomaly of the atmospheric variable/s — tidy_nc","title":"Set the time period and the geogprahical extension, as well as computes the anomaly of the atmospheric variable/s — tidy_nc","text":"function allows subset time series geogprahical area atmospheric variable. addition, even argument given, anomaly atmospheric variable/s computed. anomaly value provided order facilitate visualization results use synoptclas function. mandatory pass tidy_nc even want change time period geographical extension.","code":""},{"path":"/reference/tidy_nc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the time period and the geogprahical extension, as well as computes the anomaly of the atmospheric variable/s — tidy_nc","text":"","code":"tidy_nc(   x,   time_subset = NULL,   geo_subset = NULL,   monthly_subset = NULL,   name_vars = NULL )"},{"path":"/reference/tidy_nc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the time period and the geogprahical extension, as well as computes the anomaly of the atmospheric variable/s — tidy_nc","text":"x data.frame. data.frame following variables: lon, lat, time, value. structure returned using download_ncep. time_subset vector. Starting ending date, vector dates interest. geo_subset vector. vector providing xmin,xmax,ymin,ymax. monthly_subset integer vector integers. Number month/s desired. name_vars character vector characters. Name atmospheric variable/s. name specified, coded integers.","code":""},{"path":"/reference/tidy_nc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the time period and the geogprahical extension, as well as computes the anomaly of the atmospheric variable/s — tidy_nc","text":"data.frame following variables: lon, lat, time, value, anom_value","code":""},{"path":[]},{"path":"/reference/tidy_nc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the time period and the geogprahical extension, as well as computes the anomaly of the atmospheric variable/s — tidy_nc","text":"","code":"# Load data (mslp or precp_grid) data(mslp) data(z500) # Tidying our atmospheric variables (500 hPa geopotential height # and mean sea level pressure) together.  # Time subset between two dates atm_data1 <- tidy_nc(x = list(mslp,z500), time_subset = c(\"2000-05-01\",\"2001-04-30\")) #> Error in tidy_nc(x = list(mslp, z500), time_subset = c(\"2000-05-01\", \"2001-04-30\")): could not find function \"tidy_nc\"  # Time subset using a vector of dates of interest. Including a geographical crop dates_int <- c(\"2000-01-25\",\"2000-04-01\",\"2000-07-14\",\"2001-05-08\",\"2002-12-20\") atm_data1 <- tidy_nc(x = list(mslp,z500),                      time_subset = dates_int,                      geo_subset = c(-20,10,30,50),                      name_vars = c(\"mslp\",\"z500\")) # following the list sequence #> Error in tidy_nc(x = list(mslp, z500), time_subset = dates_int, geo_subset = c(-20,     10, 30, 50), name_vars = c(\"mslp\", \"z500\")): could not find function \"tidy_nc\""},{"path":"/reference/z500.html","id":null,"dir":"Reference","previous_headings":"","what":"500 hPa Geopotential Height — z500","title":"500 hPa Geopotential Height — z500","text":"Data NCEP/NCAR Reanalysis 1 (https://psl.noaa.gov/data/gridded/data.ncep.reanalysis.html). data corresponds global daily values 500 hPa geopotential height 2.5 x 2.5º spatial resolution January 2000 december 2002.","code":""},{"path":"/reference/z500.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"500 hPa Geopotential Height — z500","text":"","code":"data(z500)"},{"path":"/reference/z500.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"500 hPa Geopotential Height — z500","text":"data.frame following variables: x,y,time,value,var,units. geographical area: -10,30,30,60 time period: 2000-01-01 2002-12-31 units: meters","code":""},{"path":"/reference/z500.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"500 hPa Geopotential Height — z500","text":"Poli et al. (2016) Kalnay et al.,                    NCEP/NCAR 40-year reanalysis project,                    Bull. Amer. Meteor. Soc., 77, 437-470, 1996","code":""},{"path":"/reference/z500.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"500 hPa Geopotential Height — z500","text":"","code":"data(z500)"},{"path":"/news/index.html","id":"synoptreg-120","dir":"Changelog","previous_headings":"","what":"synoptReg 1.2.0","title":"synoptReg 1.2.0","text":"CRAN release: 2021-04-20 Bug fixed: error computing anomalies tidy_nc resolved. Self-Organized Maps method now available means som_clas function. Beta version. lamb_clas function improved. Two new arguments added. U(logical) allows user decide undefined class wanted . thr (numeric vector), allows select threshold want total shear vorticity total flow, tune frequency “U” type.","code":""},{"path":"/news/index.html","id":"synoptreg-110","dir":"Changelog","previous_headings":"","what":"synoptReg 1.1.0","title":"synoptReg 1.1.0","text":"CRAN release: 2020-11-20 New functions perform objective approach Lamb classification (Jenkinson Collison): get_lamb_points,plot_lamb_scheme, lamb_clas new output based maximum positive correlation now available user perform T-mode classification using synoptclas function.","code":""},{"path":"/news/index.html","id":"synoptreg-102","dir":"Changelog","previous_headings":"","what":"synoptReg 1.0.2","title":"synoptReg 1.0.2","text":"CRAN release: 2020-09-04 Bug fixed: problem scaling atmospheric variable found.","code":""},{"path":"/news/index.html","id":"synoptreg-101","dir":"Changelog","previous_headings":"","what":"synoptReg 1.0.1","title":"synoptReg 1.0.1","text":"CRAN release: 2020-03-23 Minor release. now, objects saved using download_ncep() RDS format instead RData. Three external NetCDF files (mslp_ei.nc, t850_ei.nc, z500_ei.nc) ERA-interim dataset upload testing package purposes.","code":""},{"path":"/news/index.html","id":"synoptreg-100","dir":"Changelog","previous_headings":"","what":"synoptReg 1.0.0","title":"synoptReg 1.0.0","text":"CRAN release: 2020-03-18 Major release. read_nc() function removed. now , function ReadNetCDF() R package metR used instead. function makes extremely easy read NetCDF files. download_ncep() updated now provides output similar ReadNetCDF function. tidy_cuttime_nc replaced new function called tidy_nc(). last function allows subset time period geographical extent. Now easier create synoptic classification one atmospheric variable. pca_decision() updated scree test returned ggplot2 object. synoptclas() function several updates. major change lies possibility use two kind matrix modes. now, user use “S-mode” perform de PCA-synoptic classification. matrix mode usually used classify long continuous period. Henceforth, user can execute de PCA T-mode, order analyse synoptic patterns extreme events: floods episodes, megadroughts, episodes high pollution, etc. Another change provided update, output result, provided tibble, easily compute statistics tidyverse way. raster_clas removed. Henceforth, synoptclas already provides plottable result. raster_ct2env replaced ct2env(). new function allows calculae metric user wants using fun parametre. addition, user can select output object data.frame raster. pipe operator %>% included order create chains actions using synoptReg functions auxiliar functions packages. New datasets included: mslp z500, mean sea level pressure 500 hPa geopotential height, respectively. datasets retrived NCEP/NCAR reanalysis using download_ncep() function. addition, updated precipitation dataset structure, called pcp.","code":""},{"path":"/news/index.html","id":"synoptreg-030","dir":"Changelog","previous_headings":"","what":"synoptReg 0.3.0","title":"synoptReg 0.3.0","text":"new function called download_ncep() developed order two download reanalysis data form NCEP/NCAR. new function called classjen underdeveolopement can run. added argument option raster_clas function way raster_ct2env.","code":""},{"path":"/news/index.html","id":"synoptreg-022","dir":"Changelog","previous_headings":"","what":"synoptReg 0.2.2","title":"synoptReg 0.2.2","text":"CRAN release: 2019-03-18 tidy_cuttime_nc function rewritten. only_convert argument removed, initial_year end_year arguments replaced year_range.","code":""}]
