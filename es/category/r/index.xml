<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | Marc Lemus-Cánovas</title>
    <link>/es/category/r/</link>
      <atom:link href="/es/category/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>es</language><copyright>Marc Lemus-Canovas (2023)</copyright><lastBuildDate>Thu, 09 Jul 2020 15:00:00 -0500</lastBuildDate>
    <image>
      <url>/images/icon_hu03a6f3421006a4cc5fd6ea2595e8c82d_51099_512x512_fill_lanczos_center_2.png</url>
      <title>R</title>
      <link>/es/category/r/</link>
    </image>
    
    <item>
      <title>Computando tendencias en una rejilla climática con Tidyverse</title>
      <link>/es/post/20200708/tendencias/</link>
      <pubDate>Thu, 09 Jul 2020 15:00:00 -0500</pubDate>
      <guid>/es/post/20200708/tendencias/</guid>
      <description>


&lt;div id=&#34;lectura-de-un-netcdf-al-estilo-tidyverse&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Lectura de un NetCDF al estilo Tidyverse!&lt;/h2&gt;
&lt;p&gt;Actualmente es posible leer un fichero &lt;a href=&#34;https://www.unidata.ucar.edu/publications/factsheets/current/factsheet_netcdf.pdf&#34;&gt;NetCDF&lt;/a&gt; al estilo &lt;strong&gt;Tidyverse&lt;/strong&gt; mediante el &lt;strong&gt;package&lt;/strong&gt; creado por &lt;a href=&#34;https://github.com/eliocamp&#34;&gt;Elio Campitelli&lt;/a&gt; llamado &lt;a href=&#34;https://eliocamp.github.io/metR/index.html&#34;&gt;&lt;code&gt;metR&lt;/code&gt;&lt;/a&gt;. Además esta librería contiene muchisimas funciones útiles para la representación y el análisis de datos meteorológicos y climáticos.&lt;/p&gt;
&lt;p&gt;En esta ocasión trabajaremos con una rejilla diaria de 5x5 km de temperatura máxima de las Islas Baleares (España) &lt;a href=&#34;https://digital.csic.es/handle/10261/177655&#34;&gt;(Serrano-Notivoli 2019)&lt;/a&gt;. Para la lectura usaremos un par de funciones del package &lt;code&gt;metR&lt;/code&gt;: &lt;code&gt;GlanceNetCDF&lt;/code&gt;, para echarle un vistazo al nombre de la variable, dimensiones, etc, y &lt;code&gt;ReadNetCDF&lt;/code&gt;, para la lectura del fichero NetCDF. Lógicamente haremos uso de la librería &lt;code&gt;tidyverse&lt;/code&gt;, la cual nos permitirá organizar los datos y realizar algun cálculo sencillo (recuerda que &lt;code&gt;tidyverse&lt;/code&gt; es una colección de packages!), así como las librerias &lt;code&gt;lubridate&lt;/code&gt;, para el manejo de fechas, y la librería &lt;code&gt;trend&lt;/code&gt; para calcular la significación estadística de la tendencia de nuestros datos. Además usaremos la librería &lt;code&gt;pals&lt;/code&gt; para escoger la paleta de colores cuando representemos los resultados gráficamente.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(lubridate)
library(metR)
library(trend)
library(pals) # paletas de colores&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Como queremos trabjar los datos del &lt;code&gt;NetCDF&lt;/code&gt; en formato &lt;em&gt;Tidyverse&lt;/em&gt;, vamos a especificar que el output de la función &lt;code&gt;ReadNetCDF&lt;/code&gt; sea un &lt;code&gt;data.frame&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Descargamos el fichero de Temperatura máxima (Tx) de Baleares 

# https://digital.csic.es/handle/10261/177655

# Extraemos información del NetCDF (nombre variable, dimensiones, etc)
file = &amp;quot;tmax_bal.nc&amp;quot;

variable &amp;lt;- GlanceNetCDF(file = file)
variable
## ----- Variables ----- 
## tx:
##     Maximum temperature in Celsius degrees
##     Dimensions: lon by lat by Time
## 
## 
## ----- Dimensions ----- 
##   lon: 63 values from 0.970530815018679 to 4.55413081501868 degrees_east
##   lat: 48 values from 38.3196292450381 to 40.4252292450381 degrees_north
##   Time: 16071 values from 1971-01-02 to 2015-01-01

# Leemos el NetCDF
tx &amp;lt;- ReadNetCDF(file = file,
                 vars = c(var = names(variable$vars[1])),# extracción del nombre de la variable.
                 out = &amp;quot;data.frame&amp;quot;) # objeto de salida
tx # voilà.
##                 Time      lat       lon var
##        1: 1971-01-02 40.42523 0.9705308  NA
##        2: 1971-01-02 40.42523 1.0283308  NA
##        3: 1971-01-02 40.42523 1.0861308  NA
##        4: 1971-01-02 40.42523 1.1439308  NA
##        5: 1971-01-02 40.42523 1.2017308  NA
##       ---                                  
## 48598700: 2015-01-01 38.31963 4.3229308  NA
## 48598701: 2015-01-01 38.31963 4.3807308  NA
## 48598702: 2015-01-01 38.31963 4.4385308  NA
## 48598703: 2015-01-01 38.31963 4.4963308  NA
## 48598704: 2015-01-01 38.31963 4.5541308  NA&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;gestión-y-manejo-de-los-datos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Gestión y manejo de los datos&lt;/h2&gt;
&lt;p&gt;A continuación el objetivo es agregar los datos a escala anual, eso es, pasar del dato diario al promedio anual. Para ello tenemos que jugar con varias funciones de la librería &lt;code&gt;dplyr&lt;/code&gt;, cargada en el &lt;code&gt;tidyverse&lt;/code&gt;. Primero, sin embargo, hay que filtrar los valores &lt;code&gt;NA&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tx &amp;lt;- tx %&amp;gt;% filter(!is.na(var)) %&amp;gt;% as.tibble()
## Warning: `as.tibble()` is deprecated as of tibble 2.0.0.
## Please use `as_tibble()` instead.
## The signature and semantics have changed, see `?as_tibble`.
## This warning is displayed once every 8 hours.
## Call `lifecycle::last_warnings()` to see where this warning was generated.
tx
## # A tibble: 4,114,176 x 4
##    Time                  lat   lon   var
##    &amp;lt;dttm&amp;gt;              &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1 1971-01-02 00:00:00  40.1  3.92  7.64
##  2 1971-01-02 00:00:00  40.1  3.98  7.69
##  3 1971-01-02 00:00:00  40.1  4.03  7.44
##  4 1971-01-02 00:00:00  40.1  4.09  8.29
##  5 1971-01-02 00:00:00  40.1  4.15  8.15
##  6 1971-01-02 00:00:00  40.1  4.21  8.35
##  7 1971-01-02 00:00:00  40.0  3.80  8.10
##  8 1971-01-02 00:00:00  40.0  3.86  8.04
##  9 1971-01-02 00:00:00  40.0  3.92  7.63
## 10 1971-01-02 00:00:00  40.0  3.98  7.70
## # ... with 4,114,166 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Una vez filtrados los &lt;code&gt;NA&lt;/code&gt;, procedemos a realizar el agregado anual en cada punto de grid:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tx_annual &amp;lt;- tx %&amp;gt;%
  mutate(Time = as_date(Time)) %&amp;gt;% #convertimos las fechas en formato lubridate
  mutate(year = year(Time)) %&amp;gt;% # Creamos la columna de años para realizar agregado
  group_by(year, lon, lat) %&amp;gt;% # agrupamos por año, longitud y latitud
  summarise(annual_tx = mean(var)) %&amp;gt;% # Ahora solo falta realizar el promedio
  ungroup() # una vez terminamos, desagrupamos
## `summarise()` regrouping output by &amp;#39;year&amp;#39;, &amp;#39;lon&amp;#39; (override with `.groups` argument)

tx_annual
## # A tibble: 11,520 x 4
##     year   lon   lat annual_tx
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;
##  1  1971  1.20  38.9      20.8
##  2  1971  1.20  38.9      20.9
##  3  1971  1.26  38.9      20.2
##  4  1971  1.26  38.9      20.3
##  5  1971  1.26  38.9      20.8
##  6  1971  1.32  38.9      20.7
##  7  1971  1.32  38.9      20.6
##  8  1971  1.32  38.9      20.7
##  9  1971  1.32  39.0      21.0
## 10  1971  1.32  39.0      20.3
## # ... with 11,510 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Como podemos observar, se muestra la temperatura máxima promedio para cada año y punto de grid.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;cálculo-de-la-tendencia-y-de-su-significación-estadística&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Cálculo de la tendencia y de su significación estadística&lt;/h2&gt;
&lt;p&gt;De este modo, ya podemos calcular la tendencia anual y su significación estadística con la librería &lt;code&gt;trend&lt;/code&gt;.
Para ello emplearemos la función &lt;code&gt;sens.slope&lt;/code&gt; para el cálculo de la pendiente de la tendencia (qué magnitud
de temperatura aumenta/disminuye en un año); y la función &lt;code&gt;mk.test&lt;/code&gt; (&lt;em&gt;Test de Mann
Kendall&lt;/em&gt;), para verificar si la tendencia es estadísticamente significativa o si realmente es
fruto de la variabilidad de la propia serie termométrica. Además, al tratarse de un test no paramétrico, nuestros datos no tendrán por que responder a una distribución gausiana.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tx_trend &amp;lt;- tx_annual %&amp;gt;%
  group_by(lon,lat) %&amp;gt;% # Agrupamos por lon y lat para realizar el cálculo en cada celda
  summarise(slope = sens.slope(annual_tx)$estimates *10,
            sign = mk.test(annual_tx)$p.value)
## `summarise()` regrouping output by &amp;#39;lon&amp;#39; (override with `.groups` argument)

tx_trend
## # A tibble: 256 x 4
## # Groups:   lon [38]
##      lon   lat slope   sign
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;
##  1  1.20  38.9 0.122 0.156 
##  2  1.20  38.9 0.122 0.156 
##  3  1.26  38.9 0.110 0.115 
##  4  1.26  38.9 0.112 0.120 
##  5  1.26  38.9 0.147 0.0834
##  6  1.32  38.9 0.136 0.0983
##  7  1.32  38.9 0.133 0.111 
##  8  1.32  38.9 0.146 0.0869
##  9  1.32  39.0 0.150 0.0645
## 10  1.32  39.0 0.133 0.0983
## # ... with 246 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ya tenemos el valor del pendiente Sen, que nos indica la tasa de cambio cada 10 años (hemos multiplicado x 10), así como la significación de la tendencia indicada a través del &lt;em&gt;p-value&lt;/em&gt;. Ahora simplemente realizaremos la visualización de los resultados indicando aquellas celdas que muestran una significación estadística al aumento o disminución de la temperatura máxima anual.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot()+
  geom_tile(data = tx_trend, aes(x = lon, y = lat, fill = slope))+
  scale_fill_gradientn(colors = rev(pals::linearlhot(100)), name = &amp;quot;ºC/10y&amp;quot;, limits = c(0.1,0.45)) +
  geom_point(data = filter(tx_trend, sign &amp;lt; 0.01),aes(x = lon, y = lat, color = &amp;quot;Tendencia sign. \n p-value &amp;lt;0.01&amp;quot;),
             size = 0.4, show.legend = T) +
  scale_color_manual(values = c(&amp;quot;black&amp;quot;), name = &amp;quot;&amp;quot;)+
  coord_fixed(1.3)+
  xlab(&amp;quot;Longitud&amp;quot;) + ylab(&amp;quot;Latitud&amp;quot;)+
  labs(title = &amp;quot;Tendencia decadal de la temperatura máxima en las Islas Baleares&amp;quot;, 
       subtitle = &amp;quot;(1971-2014)&amp;quot;,
       caption = &amp;quot;Base de datos: STEAD (Serrano-Notivoli,2019)&amp;quot;)+
  theme_bw() +
  guides(fill = guide_colourbar(barwidth = 9, barheight = 0.5, title.position=&amp;quot;right&amp;quot;))+
  theme(legend.position = &amp;quot;bottom&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/es/post/20200708/tendencias_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Para cualquier duda, no dudes en dejar un comentario.&lt;/p&gt;
&lt;p&gt;Saludos!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>[Tutorial] Clasificación sinóptica de eventos de precipitación abundante con la librería {synoptReg}</title>
      <link>/es/post/20220412/tutorial_aec2022/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/es/post/20220412/tutorial_aec2022/</guid>
      <description>


&lt;div id=&#34;introducción&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Introducción&lt;/h3&gt;
&lt;p&gt;Este pequeño tutorial tiene como objetivo computar una clasificación sinóptica de los días con precipitación torrencial en el Observatorio del Ebro (Tortosa, Catalunya) con la librería de programación R &lt;a href=&#34;https://lemuscanovas.github.io/synoptreg/&#34;&gt;&lt;strong&gt;{synoptReg}&lt;/strong&gt;&lt;/a&gt; &lt;a href=&#34;https://www.sciencedirect.com/science/article/abs/pii/S1364815219300064&#34;&gt;lemus-canovas2019&lt;/a&gt;]. Los pasos que se seguirán son básicamente 3:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Descarga y cómputo de los eventos torrenciales&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Descarga y preproceso de los datos diarios de presión en superfície del reanálisis NCEP/NCAR 2.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;descarga-y-preproceso-de-los-datos-climáticos&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Descarga y preproceso de los datos climáticos&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(synoptReg)
library(tidyverse)
library(lubridate)
library(rnaturalearth)
library(metR)

eventos_torrenciales &amp;lt;- read_csv(file = &amp;quot;data/RR_STAID000236.txt&amp;quot;,
                      skip = 18) %&amp;gt;%
  mutate(DATE = ymd(DATE),
         RR = ifelse(RR == -9999, NA,RR/10)) %&amp;gt;%
  filter(RR &amp;gt;= 50, DATE &amp;gt;= &amp;quot;1948-01-01&amp;quot;)

dates &amp;lt;- eventos_torrenciales %&amp;gt;%
  select(DATE) %&amp;gt;%
  mutate(yr = year(DATE),
         mo = month(DATE))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora que ya hemos filtrado los días con precipitación &amp;gt;= 50 mm/24h, podemos proceder a extraer las fechas de tales eventos para empezar la descarga de los datos del reanálisis NCEP/NCAR.Usaremos los años en que se producen los eventos para no descargar toda la base de datos entera y ahorrar espacio en el disco y tiempo de descarga.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;slp_l &amp;lt;- list()
for (ii in 1:nrow(dates)) {
yr &amp;lt;- pull(dates, yr)[ii]
mo &amp;lt;- pull(dates, mo)[ii]

slp_l[[ii]] &amp;lt;- download_ncep(var = &amp;quot;slp&amp;quot;,
                     level = &amp;quot;surface&amp;quot;,
                     year_range = c(yr,yr),
                     month_range = c(1,12),
                     lat_range = c(25,70),
                     lon_range = c(-20,30),
                     dailymean = T,
                     save_download = F,
                     reanalysis2 = F)

print(paste(ii/nrow(dates)*100, &amp;quot;%&amp;quot;))
}

slp_data &amp;lt;- bind_rows(slp_l)
write_csv(slp_data,&amp;quot;data/slp_dat_1949to2022.csv&amp;quot;,col_names = T)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add a new chunk by clicking the &lt;em&gt;Insert Chunk&lt;/em&gt; button on the toolbar or by pressing &lt;em&gt;Ctrl+Alt+I&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;slp_data &amp;lt;- read_csv(&amp;quot;data/slp_dat_1949to2022.csv&amp;quot;) %&amp;gt;% 
  distinct(time,lon,lat, .keep_all = T)
vars_torrential &amp;lt;- tidy_nc(x = slp_data,
                       time_subset = dates$DATE,
                       name_vars = &amp;quot;mslp&amp;quot;)
vars_torrential&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 45,885 × 6
##    var     lon   lat time         value anom_value
##    &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;date&amp;gt;       &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;
##  1 mslp  -20      70 1949-05-15 102538.       903.
##  2 mslp  -17.5    70 1949-05-15 102530        922.
##  3 mslp  -15      70 1949-05-15 102482.       907.
##  4 mslp  -12.5    70 1949-05-15 102405        866.
##  5 mslp  -10      70 1949-05-15 102302.       801.
##  6 mslp   -7.5    70 1949-05-15 102182.       711.
##  7 mslp   -5      70 1949-05-15 102065        614.
##  8 mslp   -2.5    70 1949-05-15 101942.       510.
##  9 mslp    0      70 1949-05-15 101828.       417.
## 10 mslp    2.5    70 1949-05-15 101738.       352.
## # … with 45,875 more rows
## # ℹ Use `print(n = ...)` to see more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;clasificación-sinóptica-mediante-análisis-de-componentes-principales&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Clasificación sinóptica mediante Análisis de Componentes Principales&lt;/h3&gt;
&lt;p&gt;When you save the notebook, an HTML file containing the code and output will be saved alongside it (click the &lt;em&gt;Preview&lt;/em&gt; button or press &lt;em&gt;Ctrl+Shift+K&lt;/em&gt; to preview the HTML file).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;info &amp;lt;- pca_decision(vars_torrential,ncomp = 20,norm = T,matrix_mode = &amp;quot;T-mode&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The preview shows you a rendered HTML copy of the contents of the editor. Consequently, unlike &lt;em&gt;Knit&lt;/em&gt;, &lt;em&gt;Preview&lt;/em&gt; does not run any R code chunks. Instead, the output of the chunk when it was last run in the editor is displayed.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;info$screeplot&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/es/post/20220412/tutorial_AEC2022_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cl &amp;lt;- synoptclas(vars_torrential,ncomp = 6,norm = T,matrix_mode = &amp;quot;T-mode&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sf::sf_use_s2(F)
borders &amp;lt;- ne_countries(continent = c(&amp;quot;europe&amp;quot;,&amp;quot;africa&amp;quot;),
                                       returnclass = &amp;quot;sp&amp;quot;,scale = 50)


ggplot()+
    geom_contour_fill(filter(cl$grid_clas_pn, var == &amp;quot;mslp&amp;quot;), 
              mapping = aes(lon,lat,z = mean_WT_value/100),
              breaks = seq(976,1032,2))+
    geom_path(data = borders,aes(long,lat, group = group), 
              fill = &amp;quot;transparent&amp;quot;, color = &amp;quot;black&amp;quot;)+
    geom_contour2(data = filter(cl$grid_clas_pn,var == &amp;quot;mslp&amp;quot;),
                  aes(x=lon,y=lat,z=mean_WT_value/100),
                  binwidth = 2, color = &amp;quot;black&amp;quot;) +
    geom_text_contour(data= filter(cl$grid_clas_pn, var == &amp;quot;mslp&amp;quot;),
                      aes(x=lon,y=lat,z=mean_WT_value/100), 
                      stroke = 0.15,binwidth = 2) +
    annotate(&amp;quot;text&amp;quot;, x = 0.5, y = 40.8, colour = &amp;quot;magenta&amp;quot;, label = &amp;quot;x&amp;quot;)+
    guides(fill = guide_colourbar(barwidth = 30, barheight = 0.5))+
    facet_wrap(~WT, ncol = 4) +
    scale_fill_stepsn(colours = rev(pals::brewer.rdylbu(100)),name = &amp;quot;slp (hPa)&amp;quot;, 
                         limits = c(996,1032), breaks = seq(976,1032,2)) +
    scale_x_continuous(limits = c(-20,30), expand = c(0, 0))+
    scale_y_continuous(limits = c(25,70), expand = c(0,0))+
    theme_void() +
    coord_map(projection = &amp;quot;lambert&amp;quot;,lat0 =0, lat1 = 70)+
    theme(
      panel.grid.major = element_blank(), 
      panel.grid.minor = element_blank(),
      panel.background = element_blank(),
      text = element_text(size = 10),
      strip.background = element_rect(fill = &amp;quot;transparent&amp;quot;, color = NA),
      axis.title = element_blank(),
      axis.text = element_blank(),
      axis.ticks = element_blank(),
      legend.position = &amp;quot;bottom&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/es/post/20220412/tutorial_AEC2022_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;clas &amp;lt;- cl$clas_pn

# monthly frequence histogram
WTs &amp;lt;- sort(unique(clas$WT))
mo_hist &amp;lt;- clas %&amp;gt;%  
  mutate(mo = month(time)) %&amp;gt;% 
  group_by(WT,mo) %&amp;gt;%
  mutate(n = length(time)) %&amp;gt;%
  ungroup() %&amp;gt;%
  group_by(WT) %&amp;gt;%
  mutate(n_prop = n/length(time)) %&amp;gt;%
  distinct(WT,mo,.keep_all = T) %&amp;gt;%
  ungroup() %&amp;gt;%
  complete(mo, WT = WTs, 
           fill = list(n_prop = 0))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mo_hist, aes(x = mo, y = WT,fill = n_prop))+
  geom_tile(color = &amp;quot;black&amp;quot;) +
  scale_fill_gradientn(colors = pals::brewer.blues(100), 
                       name = &amp;quot;fi&amp;quot;,
                       breaks = seq(0,1, by = 0.1)) +
  geom_text(aes(label=round(n_prop,2)), size = 4)+
  scale_x_continuous(name=&amp;quot;Month&amp;quot;, 
                     breaks = seq(1,12,1), 
                     expand=c(0,0)) +
  guides(fill = guide_colourbar(barwidth = 15, barheight = 0.5))+

  theme_classic()+
  labs(title = &amp;quot;Frecuencia relativa mensual por tipo de circulación (WT)&amp;quot;)+
  theme(axis.text=element_text(size=8),
        axis.title.x = element_text(size = 8),
        axis.title.y = element_text(size = 8),
        legend.title=element_text(size=8),
        legend.text=element_text(size= 8),
        legend.position=&amp;quot;bottom&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/es/post/20220412/tutorial_AEC2022_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;extracting-annual-frequency-trends&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Extracting annual frequency trends&lt;/h1&gt;
&lt;p&gt;How to extract the trend of annual frequences per WT?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;WT_time_series &amp;lt;- clas %&amp;gt;%  
  mutate(yr = year(time)) %&amp;gt;% 
  group_by(yr,WT) %&amp;gt;%
  mutate(n = length(time)) %&amp;gt;%
  ungroup() %&amp;gt;%
  distinct(WT,yr,.keep_all = T) %&amp;gt;%
  select(-time) %&amp;gt;%
  complete(yr, WT =WTs, 
           fill = list(n = 0)) %&amp;gt;%
  complete(WT, yr =1948:2022, 
           fill = list(n = 0))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = WT_time_series, aes(x = yr, y = 1, fill = n))+
  geom_tile(color = &amp;quot;black&amp;quot;)+
  scale_x_continuous(labels = seq(1950,2020,5), 
                     breaks = seq(1950,2020,5),
                     minor_breaks = seq(1950,2020,1))  +
  scale_fill_gradientn(colors = pals::brewer.reds(100), 
                       name = &amp;quot;Fi&amp;quot;,
                       breaks = seq(0,5, by = 1)) +
  labs(title = &amp;quot;Frecuencia absoluta anual por tipo de circulación&amp;quot;)+
  guides(fill = guide_colourbar(barwidth = 15, barheight = 0.5))+
  facet_wrap(~ WT, ncol = 2,scales = &amp;quot;free_y&amp;quot;) +
  theme_void() +
  theme(axis.text.x = element_text(colour=&amp;quot;grey20&amp;quot;, 
                                   size=8, 
                                   angle=90, 
                                   hjust=.5, 
                                   vjust=.5),
        axis.text.y = element_blank(),
        text = element_text(size=10),panel.grid = element_blank(),
        legend.position = &amp;quot;bottom&amp;quot;) +
  ylab(&amp;quot;Daily Frequency&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/es/post/20220412/tutorial_AEC2022_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
